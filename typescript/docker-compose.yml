version: '3.9' #This is so you can use version 3.9 of docker-compose
services: #This is so you can create multiple containers
   database: #THIS IS THE SERVICE NAME THAT MUST BE IN THE CONNECTION CREATION FILE
     container_name: database #This is the name of the container
     image: postgres:12 #This is so you can use the postgres image
     ports: #This is so you can define the ports that the container will run on
      - 5432:5432 # Port 5432 is the port the database will run on
     restart: always #If you want the container to restart whenever it stops, you can use this option
     environment: #This is so you can set environment variables
       - POSTGRES_USER=docker #This is the database user
       - POSTGRES_PASSWORD=ignite #This is the database password
       - POSTGRES_DB=rentx #This is the name of the database
     volumes: #This is so you can save the database data
       - pgdata:/data/postgres #This is so you can save the database data
     healthcheck: #This is so you can check if the database is running
       test: ['CMD', 'pg_isready -U user -d rentx'] #This is so you can check if the database is running
       interval: 10s #This is so you can define the time interval that the healthcheck will run
       timeout: 5s #This is so you can define the time the healthcheck will wait to timeout
       retries: 5 #This is so you can define how many times the healthcheck will run

   app: #This is the name of the service you will use to run the container
     build: . #This is so you can build the container
     container_name: rentx #This is the name of the container
     restart: always #If you want the container to restart whenever it stops, you can use this option
     ports:
       - 3000:3000 # Port 3000 is the port the server will run on
       - 9229:9229 #You can also insert this port to be able to use the debug
     volumes:
       - .:/usr/app #This is so you can edit the container files without having to build it all the time
     links:
       - database #This is so you can link the database service to the app service
     depends_on:
       - database #This is the name of the service you put in the connection file

volumes: #This is so you can create a volume to save the database data
   pgdata: #This is the name of the volume
     driver: local #This is so you can use the local driver